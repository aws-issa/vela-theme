{% comment %}
  Featured Testimonials – Carousel (max 6)
  Follows the exact visual language of the reference:
  • Heading: "What Our Customers Are Saying"
  • Three turquoise cards visible on desktop, full‑width cards stacked on mobile
  • Opening “❝” top‑left, closing “❞” bottom‑right inside each card
  • Background colour #A0D8DC
  • Font family: Grotesque (tailwind utility: tw-font-grotesque)
  • Arrow buttons appear only when scrolling is possible
{% endcomment %}
<section class="tw-py-16 tw-bg-white">
  <div class="tw-max-w-7xl tw-mx-auto">
    <!-- Heading -->
    <h2 class="tw-text-4xl md:tw-text-5xl tw-font-bold tw-font-grotesque tw-text-[rgb(1,70,72)] tw-mb-8">
      {{ section.settings.heading }}
    </h2>

    <!-- Slider wrapper -->
    <div
      x-data="testimonialCarousel()"
      x-init="init()"
      class="tw-relative"
    >
      <!-- Track -->
      <div
        x-ref="track"
        class="tw-flex tw-space-x-6 tw-overflow-x-auto tw-scroll-smooth tw-scrollbar-hide"
      >
        {% for block in section.blocks %}
          <div
            class="tw-flex-shrink-0 tw-w-full md:tw-w-1/3"
            role="group"
            aria-label="Testimonial {{ forloop.index }}"
          >
            <div class="tw-bg-[#A0D8DC] tw-rounded-sm tw-h-full tw-p-8 tw-flex tw-flex-col tw-justify-between">
              <!-- open quote -->
              <span class="tw-text-3xl tw-font-bold">❝</span>

              <div class="tw-flex-1">
                <p class="tw-text-lg tw-font-grotesque tw-font-medium tw-text-[rgb(1,70,72)]">
                  {{ block.settings.quote }}
                </p>
              </div>

              <div class="tw-mt-6">
                <p class="tw-font-bold tw-font-grotesque tw-text-[rgb(1,70,72)]">{{ block.settings.author }}</p>
                {% if block.settings.subtitle != blank %}
                  <p class="tw-text-sm tw-uppercase tw-tracking-widest tw-font-grotesque tw-text-[rgb(1,70,72)]">
                    {{ block.settings.subtitle }}
                  </p>
                {% endif %}
              </div>

              <!-- close quote -->
              <span class="tw-self-end tw-text-3xl tw-font-bold">❞</span>
            </div>
          </div>
        {% endfor %}
      </div>

      <!-- Prev / Next arrows -->
      <button
        x-ref="prevBtn"
        @click="scrollPrev"
        class="tw-hidden md:tw-flex tw-items-center tw-justify-center tw-absolute tw-top-1/2 tw-left-0 -tw-translate-y-1/2 tw-bg-[#A0D8DC] tw-rounded-full tw-w-10 tw-h-10 tw-text-[rgb(1,70,72)] tw-font-bold tw-shadow-md hover:tw-bg-[#92c8cb] focus:tw-outline-none"
        aria-label="Previous testimonials"
        :class="{ 'tw-opacity-0 tw-pointer-events-none': atStart }"
      >
        ‹
      </button>

      <button
        x-ref="nextBtn"
        @click="scrollNext"
        class="tw-hidden md:tw-flex tw-items-center tw-justify-center tw-absolute tw-top-1/2 tw-right-0 -tw-translate-y-1/2 tw-bg-[#A0D8DC] tw-rounded-full tw-w-10 tw-h-10 tw-text-[rgb(1,70,72)] tw-font-bold tw-shadow-md hover:tw-bg-[#92c8cb] focus:tw-outline-none"
        aria-label="Next testimonials"
        :class="{ 'tw-opacity-0 tw-pointer-events-none': atEnd }"
      >
        ›
      </button>
    </div>
  </div>
</section>

<script>
  function testimonialCarousel() {
    return {
      atStart: true,
      atEnd: false,
      track: null,
      init() {
        this.track = this.$refs.track;
        this.updateArrows();
        this.track.addEventListener('scroll', () => this.updateArrows());
        // Re‑evaluate on resize
        window.addEventListener('resize', () => this.updateArrows());
      },
      scrollNext() {
        const cardWidth = this.track.querySelector('[role="group"]').offsetWidth + 24; /* space-x-6 => 1.5rem => 24px */
        this.track.scrollBy({ left: cardWidth, behavior: 'smooth' });
      },
      scrollPrev() {
        const cardWidth = this.track.querySelector('[role="group"]').offsetWidth + 24;
        this.track.scrollBy({ left: -cardWidth, behavior: 'smooth' });
      },
      updateArrows() {
        const scrollLeft = this.track.scrollLeft;
        const maxScrollLeft = this.track.scrollWidth - this.track.clientWidth - 1;
        this.atStart = scrollLeft <= 0;
        this.atEnd = scrollLeft >= maxScrollLeft;
      },
    };
  }
</script>

{% schema %}
{
  "name": "Featured Testimonials",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "What Our Customers Are Saying"
    }
  ],
  "blocks": [
    {
      "type": "testimonial",
      "name": "Testimonial",
      "settings": [
        {
          "type": "textarea",
          "id": "quote",
          "label": "Quote",
          "default": "Wonderful products, amazing cause. I love supporting the shows."
        },
        {
          "type": "text",
          "id": "author",
          "label": "Author",
          "default": "Emma T."
        },
        {
          "type": "text",
          "id": "subtitle",
          "label": "Subtitle",
          "default": "Verified Customer"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Featured Testimonials",
      "category": "Custom",
      "blocks": [{ "type": "testimonial" }, { "type": "testimonial" }, { "type": "testimonial" }]
    }
  ]
}
{% endschema %}
